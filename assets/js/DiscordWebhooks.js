if(typeof kotlin==='undefined'){throw new Error("Error loading module 'DiscordWebhooks'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'DiscordWebhooks'.");}
if(typeof WhistlerUtils==='undefined'){throw new Error("Error loading module 'DiscordWebhooks'. Its dependency 'WhistlerUtils' was not found. Please, check whether 'WhistlerUtils' is loaded prior to 'DiscordWebhooks'.");}
var DiscordWebhooks=function(_,Kotlin,$module$WhistlerUtils){'use strict';var println=Kotlin.kotlin.io.println_s8jyv4$;var utils=$module$WhistlerUtils.utils;var throwCCE=Kotlin.throwCCE;var Unit=Kotlin.kotlin.Unit;var appendElement=Kotlin.kotlin.dom.appendElement_ldvnw0$;var isBlank=Kotlin.kotlin.text.isBlank_gw00vp$;var Kind_CLASS=Kotlin.Kind.CLASS;var ensureNotNull=Kotlin.ensureNotNull;function main$lambda$lambda($receiver){$receiver.setAttribute('name','embed-area');return Unit;}
function main$lambda$lambda$lambda(closure$embedArea,this$){return function(event){closure$embedArea.remove();this$.remove();return Unit;};}
function main$lambda$lambda_0(closure$embedArea){return function($receiver){$receiver.innerHTML='Deletar Embed';$receiver.addEventListener('click',main$lambda$lambda$lambda(closure$embedArea,$receiver));return Unit;};}
function main$lambda(closure$embedDivWrapper){return function(event){var embedArea=appendElement(closure$embedDivWrapper,'textarea',main$lambda$lambda);appendElement(closure$embedDivWrapper,'button',main$lambda$lambda_0(embedArea));return Unit;};}
function main$lambda$lambda_1(closure$http,closure$htmlOutputElement,closure$uploadFileInput){return function(it){if(closure$http.readyState===XMLHttpRequest.DONE){println(closure$http.responseText);closure$htmlOutputElement.innerHTML=closure$http.responseText;}
if(closure$http.readyState===XMLHttpRequest.OPENED){if(isBlank(closure$uploadFileInput.value))
closure$http.setRequestHeader('Content-Type','application/json');}
return Unit;};}
function main$lambda$ObjectLiteral(){}
main$lambda$ObjectLiteral.$metadata$={kind:Kind_CLASS,interfaces:[]};var ArrayList_init=Kotlin.kotlin.collections.ArrayList_init_287e2$;var copyToArray=Kotlin.kotlin.collections.copyToArray;function main$lambda_0(closure$htmlOutputElement,closure$uploadFileInput,closure$webhookUrlInput,closure$messageContentInput,closure$usernameInput,closure$avatarUrlInput,closure$useTextToSpeechInput,closure$embedDivWrapper){return function(event){var tmp$,tmp$_0,tmp$_1,tmp$_2,tmp$_3;println('Clicked!');var http=new XMLHttpRequest();http.onreadystatechange=main$lambda$lambda_1(http,closure$htmlOutputElement,closure$uploadFileInput);http.open('POST',closure$webhookUrlInput.value+'?wait=true',true);var dynamic=new main$lambda$ObjectLiteral();dynamic.content=closure$messageContentInput.value;if(!isBlank(closure$usernameInput.value))
dynamic.username=closure$usernameInput.value;if(!isBlank(closure$avatarUrlInput.value))
dynamic.avatar_url=closure$avatarUrlInput.value;if(closure$useTextToSpeechInput.checked)
dynamic.tts=true;var embedList=ArrayList_init();var embeds=closure$embedDivWrapper.querySelectorAll('[name]');tmp$=embeds.length;for(var idx=0;idx<tmp$;idx++){var embedDiv=Kotlin.isType(tmp$_0=ensureNotNull(embeds[idx]),HTMLTextAreaElement)?tmp$_0:throwCCE();var embed=embedDiv.value;embedList.add_11rb$(JSON.parse(embed));}
if(!embedList.isEmpty()){dynamic.embeds=copyToArray(embedList);}
if(closure$uploadFileInput.files!=null&&((tmp$_2=(tmp$_1=closure$uploadFileInput.files)!=null?tmp$_1.length:null)!=null?tmp$_2:0)>0){println('Sending using form...');var formData=new FormData();formData.append('payload_json',JSON.stringify(dynamic));tmp$_3=ensureNotNull(closure$uploadFileInput.files).length;for(var idx_0=0;idx_0<tmp$_3;idx_0++){var file=ensureNotNull(ensureNotNull(closure$uploadFileInput.files)[idx_0]);formData.append('file'+idx_0,file);}
http.send(formData);}
else{println('Sending using JSON...');http.send(JSON.stringify(dynamic));}
return Unit;};}
function main(args){var tmp$,tmp$_0,tmp$_1,tmp$_2,tmp$_3,tmp$_4,tmp$_5;println('Starting DiscordWebhooks...');var webhookUrlInput=Kotlin.isType(tmp$=utils.page.getElementByName_61zpoe$('webhook-url'),HTMLInputElement)?tmp$:throwCCE();var usernameInput=Kotlin.isType(tmp$_0=utils.page.getElementByName_61zpoe$('webhook-name'),HTMLInputElement)?tmp$_0:throwCCE();var avatarUrlInput=Kotlin.isType(tmp$_1=utils.page.getElementByName_61zpoe$('webhook-avatar'),HTMLInputElement)?tmp$_1:throwCCE();var messageContentInput=Kotlin.isType(tmp$_2=utils.page.getElementByName_61zpoe$('message-content'),HTMLTextAreaElement)?tmp$_2:throwCCE();var useTextToSpeechInput=Kotlin.isType(tmp$_3=utils.page.getElementByName_61zpoe$('webhook-tts'),HTMLInputElement)?tmp$_3:throwCCE();var uploadFileInput=Kotlin.isType(tmp$_4=utils.page.getElementByName_61zpoe$('webhook-file'),HTMLInputElement)?tmp$_4:throwCCE();var addEmbedButton=utils.page.getElementByName_61zpoe$('add-embed');var embedDivWrapper=Kotlin.isType(tmp$_5=utils.page.getElementById_61zpoe$('embed-area-wrapper'),HTMLDivElement)?tmp$_5:throwCCE();var sendMessageButton=utils.page.getElementByName_61zpoe$('send-message');var htmlOutputElement=utils.page.getElementById_61zpoe$('html-output');addEmbedButton.addEventListener('click',main$lambda(embedDivWrapper));sendMessageButton.addEventListener('click',main$lambda_0(htmlOutputElement,uploadFileInput,webhookUrlInput,messageContentInput,usernameInput,avatarUrlInput,useTextToSpeechInput,embedDivWrapper));}
_.main_kand9s$=main;main([]);Kotlin.defineModule('DiscordWebhooks',_);return _;}(typeof DiscordWebhooks==='undefined'?{}:DiscordWebhooks,kotlin,WhistlerUtils);